function turtleCommands = turtleGraph3(LindenmayerString)

coord = [double(cell2mat(split(LindenmayerString,""))).'; zeros(1, length(LindenmayerString))];

if any(coord(1,:)=='S')
    disp('hey')
    for i=1:length(LindenmayerString)
        disp(i)
        %Number of iterations specified in LindIter.m
        iteration=log((numel(coord)/2)+1/2)/(2*log(2));
        
        %salmon = sort(data(data(:, end)==1, 1:2));
        if coord(1,i)=='S'
            coord(:,i)=[(1/3)^iteration, 1];
        elseif coord(1,i)=='R'%the angle depends on the first letter
            coord(:,i)=[-2/3*pi, 2];
        
        elseif coord(1,i)=='L' 
            coord(:,i)=[1/3*pi, 2];
        end
        %disp(coord)
    end
%Sierpinski
elseif any(coord=='A')
    
    if any(coord(1,:)=='S')
    disp('hey')
    for i=1:length(LindenmayerString)
        disp(i)
        %Number of iterations specified in LindIter.m
        iteration=log((numel(coord)/2)+1/2)/(2*log(2));
        
        %salmon = sort(data(data(:, end)==1, 1:2));
        if coord(1,i)=='S'
            coord(:,i)=[(1/3)^iteration, 1];
        elseif coord(1,i)=='R'%the angle depends on the first letter
            coord(:,i)=[-2/3*pi, 2];
        
        elseif coord(1,i)=='L' 
            coord(:,i)=[1/3*pi, 2];
        end
        %disp(coord)
    end
    
    
    %Number of iterations specified in LindIter.m
    iteration = log(numel(coord)/2+1/2)/log(3);
    
    %length determination
    coord(coord=='A'|coord=='B')=(1/2)^iteration;
    
    %the angle depends on the first letter
    coord(coord=='R') =-1/3*pi;
    coord(coord=='L') =1/3*pi;
    
    type = 1;
    
elseif any(coord=='[')
    
    %iteration = log(numel(coord)/2+1/2)/log(3);
    
    coord(coord=='1'    )=(1/2);
    coord(coord=='0')=(1/4);
    
    coord(coord==']') =-0.7854;
    coord(coord=='[') =0.7854;  
    type = 2;
    %disp(coord);
end

turtleCommands = coord;


